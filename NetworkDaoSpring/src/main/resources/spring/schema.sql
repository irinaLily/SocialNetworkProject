DROP TABLE IF EXISTS PERSON;
DROP TABLE IF EXISTS MESSAGE;
DROP TABLE IF EXISTS POST;
DROP TABLE IF EXISTS HOBBY;
DROP TABLE IF EXISTS FRIENDSHIP;
DROP TABLE IF EXISTS PLACE;
DROP TABLE IF EXISTS FRIENDSHIP;

CREATE TABLE PERSON (
       ID INT NOT NULL AUTO_INCREMENT
     , FIRST_NAME VARCHAR(40) NOT NULL
     , LAST_NAME VARCHAR(40) NOT NULL
     , BIRTHDAY DATE
     , NICKNAME VARCHAR(40) NOT NULL
     , UNIQUE UQ_ITEM_1 (NICKNAME)
     , PRIMARY KEY (ID)
);

CREATE TABLE MESSAGE (
       ID INT NOT NULL AUTO_INCREMENT
     , CONTENT VARCHAR(160) NOT NULL
     , TIME_SENT DATE
     , PERSON_FROM INT NOT NULL
     , PERSON_TO INT NOT NULL
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_PERSON_FROM_MESSAGE FOREIGN KEY (PERSON_FROM)
                  REFERENCES PERSON (ID)
     , CONSTRAINT FK_PERSON_TO_MESSAGE_ FOREIGN KEY (PERSON_TO)
                  REFERENCES PERSON (ID)
);

CREATE TABLE POST (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(40) NOT NULL
     , CONTENT VARCHAR(160) NOT NULL
     , PLASE_TAME DATE
     , PERSON_ID INT NOT NULL
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_POST_PERSON FOREIGN KEY (PERSON_ID)
                  REFERENCES PERSON (ID)
);

CREATE TABLE HOBBY(
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(40) NOT NULL
     , DESCRIPTION VARCHAR(160) NOT NULL
     , PRIMARY KEY (ID)
);
CREATE TABLE PLACE (
       ID INT NOT NULL AUTO_INCREMENT
     , TITLE VARCHAR(40) NOT NULL
     , DESCRIPTION VARCHAR(160) NOT NULL
     , LATITUDE INT NOT NULL
     , LONGITUDE INT NOT NULL
     , PRIMARY KEY (ID)
);

CREATE TABLE POST_LIKES (
     ID INT NOT NULL AUTO_INCREMENT
     ,  POST_ID INT NOT NULL
     , PERSON_ID INT NOT NULL
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_POST_LIKES FOREIGN KEY (POST_ID)
                  REFERENCES POST (ID) ON DELETE CASCADE
     , CONSTRAINT FK_PERSON_LIKES FOREIGN KEY (PERSON_ID)
                  REFERENCES PERSON (ID) ON DELETE CASCADE
);

CREATE TABLE FRIENDSHIP (
      ID INT NOT NULL AUTO_INCREMENT
     , PERSON_ID INT NOT NULL
     , FRIEND_ID INT NOT NULL
     , DATA_FROM DATE
      , PRIMARY KEY (ID)
     , CONSTRAINT FK_FRIENDSHIP_PERSON FOREIGN KEY (PERSON_ID)
                  REFERENCES PERSON (ID)
     , CONSTRAINT FK_FRIEND_PERSONF FOREIGN KEY (FRIEND_ID)
                  REFERENCES PERSON (ID)
);
CREATE TABLE PERSON_PlACE (
     ID INT NOT NULL AUTO_INCREMENT
     , PLACE_ID INT NOT NULL
     , PERSON_ID INT NOT NULL
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_PERSONP_PlACE FOREIGN KEY (PLACE_ID)
                  REFERENCES PLACE (ID) ON DELETE CASCADE
     , CONSTRAINT FK_PERSON_PlACEP FOREIGN KEY (PERSON_ID)
                  REFERENCES PERSON (ID) ON DELETE CASCADE
);

CREATE TABLE PERSON_HOBBY (
     ID INT NOT NULL AUTO_INCREMENT
     , HOBBY_ID INT NOT NULL
     , PERSON_ID INT NOT NULL
     , PRIMARY KEY (ID)
     , CONSTRAINT FK_PERSONP_HOBBY FOREIGN KEY (HOBBY_ID)
                  REFERENCES HOBBY (ID) ON DELETE CASCADE
     , CONSTRAINT FK_PERSON_HOBBYP FOREIGN KEY (PERSON_ID)
                  REFERENCES PERSON (ID) ON DELETE CASCADE
);

